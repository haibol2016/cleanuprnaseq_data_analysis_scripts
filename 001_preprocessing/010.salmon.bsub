#!/bin/bash
#BSUB -n 8 # minmal numbers of processors required for a parallel job
#BSUB -R rusage[mem=4000] # ask for memory 32G
#BSUB -W 24:00 #limit the job to be finished in 72 hours
#BSUB -J "salmon[1-2]%50"
#BSUB -q long # which queue we want to run in
#BSUB -o logs/out.%J.%I.txt # log
#BSUB -e logs/err.%J.%I.txt # error
#BSUB -R "span[hosts=1]" # All hosts on the same chassis"
##BSUB -w "done(771574)"

i=$(($LSB_JOBINDEX -1))
mkdir -p logs

paired_end=1
data=trimmed.data
stranded=1
transcripts_index=docs/human_GRCh38.v110/human_GRCh38.v110_salmon_index

if [ $paired_end -eq 1 ]; then
   R1=(`ls  $data/*.R1Ptrim.fastq.gz`)
   R2=(`ls  $data/*.R2Ptrim.fastq.gz`)
   name=(`ls $data/*.R1Ptrim.fastq.gz | perl -p -e 's{.+/(.+?).R1Ptrim.fastq.gz}{$1}'`)
else
   R=(`ls  $data/*.R1Utrim.fastq.gz`)
   name=(`ls $data/*.R1Utrim.fastq.gz | perl -p -e 's{.+/(.+?).R1Utrim.fastq.gz}{$1}'`)  	
fi

if [ $paired_end -eq 1 ]; then

	## For paired end RNA-seq data
	if [ $stranded -eq 1 ]; then
		## correct strand
  		out=results/010.salmon.quant.out/${name[$i]}_ISF
  		mkdir -p $out
  		~/mccb-umw/shared/mccb_bin/salmon-1.9.0/bin/salmon  quant -i ${transcripts_index} \
             		--threads 8 \
             		--seqBias --gcBias --posBias   --softclip  --softclipOverhangs \
             		--biasSpeedSamp 5 \
             		-l ISF  -1 ${R1[$i]} -2 ${R2[$i]} \
             		--validateMappings -o $out

		## opposite strand
  		out=results/010.salmon.quant.out/${name[$i]}_ISR
  		mkdir -p $out
  		~/mccb-umw/shared/mccb_bin/salmon-1.9.0/bin/salmon  quant -i ${transcripts_index} \
             		--threads 8 \
        		--seqBias --gcBias --posBias   --softclip  --softclipOverhangs \
             		--biasSpeedSamp 5 \
             		-l ISR  -1 ${R1[$i]} -2 ${R2[$i]} \
             		--validateMappings -o $out
	else
		## unstranded  
  		out=results/010.salmon.quant.out/${name[$i]}_IU
  		mkdir -p $out
	  	~/mccb-umw/shared/mccb_bin/salmon-1.9.0/bin/salmon  quant -i ${transcripts_index} \
             		--threads 8 \
             		--seqBias --gcBias --posBias   --softclip  --softclipOverhangs \
             		--biasSpeedSamp 5 \
             		-l IU  -1 ${R1[$i]} -2 ${R2[$i]} \
             		--validateMappings -o $out
	fi 
 
else
       if [ $stranded -eq 1 ]; then
		## correct strand
  		out=results/010.salmon.quant.out/${name[$i]}_ISF
  		mkdir -p $out
  		~/mccb-umw/shared/mccb_bin/salmon-1.9.0/bin/salmon  quant -i ${transcripts_index} \
             		--threads 8 \
             		--seqBias --gcBias --posBias   --softclip  --softclipOverhangs \
             		--biasSpeedSamp 5 \
             		-l ISF  -r ${R[$i]} \
             		--validateMappings -o $out

		## opposite strand
  		out=results/010.salmon.quant.out/${name[$i]}_ISR
  		mkdir -p $out
  		~/mccb-umw/shared/mccb_bin/salmon-1.9.0/bin/salmon  quant -i ${transcripts_index} \
             		--threads 8 \
             		--seqBias --gcBias --posBias   --softclip  --softclipOverhangs \
             		--biasSpeedSamp 5 \
             		-l ISR  -r ${R[$i]}  \
           		--validateMappings -o $out
 	else
		## unstranded
  		out=results/010.salmon.quant.out/${name[$i]}_IU
  		mkdir -p $out
  			~/mccb-umw/shared/mccb_bin/salmon-1.9.0/bin/salmon  quant -i ${transcripts_index} \
             		--threads 8 \
             		--seqBias --gcBias --posBias   --softclip  --softclipOverhangs \
             		--biasSpeedSamp 5 \
             		-l IU  -r ${R[$i]}  \
             		--validateMappings -o $out
	fi
fi	

